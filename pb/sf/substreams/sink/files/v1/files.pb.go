// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: sf/substreams/sink/files/v1/files.proto

// The `sf.substreams.sink.files.v1` package can be use in your Substreams to defined a `map` module
// whose output type will be one of the message defined in the package. The `substreams-sink-files`
// binary will then consume your module's output to create the files containing your extracted data.
//
// The current package supports a single output format which is the `Lines` message which represents
// a list of plain-text "line" that should be appended together in a single bundle.

package pbsinkfiles

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Lines represents an ordered list of lines that have been extracted of a single block. You are
// free the format each line as you please, the `substream-sink-files` tool does not make any
// assumption about the content and simply write the content to the current bundle with a trailing
// new line.
//
// It is expected that your line do **not** contain a new line character as it will be managed
// manually by the `substream-sink-files` tool.
//
// The most common use case is to use CSV or JSONL format for your line. For example, you can
// extract each transaction out of the block as a single line in JSON format as an object. The
// `substream-sink-files` will then package them in a bundle for N blocks.
type Lines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines []string `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
}

func (x *Lines) Reset() {
	*x = Lines{}
	mi := &file_sf_substreams_sink_files_v1_files_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lines) ProtoMessage() {}

func (x *Lines) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_sink_files_v1_files_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lines.ProtoReflect.Descriptor instead.
func (*Lines) Descriptor() ([]byte, []int) {
	return file_sf_substreams_sink_files_v1_files_proto_rawDescGZIP(), []int{0}
}

func (x *Lines) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

var File_sf_substreams_sink_files_v1_files_proto protoreflect.FileDescriptor

var file_sf_substreams_sink_files_v1_files_proto_rawDesc = []byte{
	0x0a, 0x27, 0x73, 0x66, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f,
	0x73, 0x69, 0x6e, 0x6b, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x73, 0x66, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x73, 0x69, 0x6e, 0x6b, 0x2e, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x1d, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x42, 0x5b, 0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x73,
	0x74, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2d, 0x73, 0x69, 0x6e,
	0x6b, 0x2d, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x66, 0x2f, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x73, 0x69, 0x6e, 0x6b, 0x2f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x73, 0x69, 0x6e, 0x6b, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sf_substreams_sink_files_v1_files_proto_rawDescOnce sync.Once
	file_sf_substreams_sink_files_v1_files_proto_rawDescData = file_sf_substreams_sink_files_v1_files_proto_rawDesc
)

func file_sf_substreams_sink_files_v1_files_proto_rawDescGZIP() []byte {
	file_sf_substreams_sink_files_v1_files_proto_rawDescOnce.Do(func() {
		file_sf_substreams_sink_files_v1_files_proto_rawDescData = protoimpl.X.CompressGZIP(file_sf_substreams_sink_files_v1_files_proto_rawDescData)
	})
	return file_sf_substreams_sink_files_v1_files_proto_rawDescData
}

var file_sf_substreams_sink_files_v1_files_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sf_substreams_sink_files_v1_files_proto_goTypes = []any{
	(*Lines)(nil), // 0: sf.substreams.sink.files.v1.Lines
}
var file_sf_substreams_sink_files_v1_files_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sf_substreams_sink_files_v1_files_proto_init() }
func file_sf_substreams_sink_files_v1_files_proto_init() {
	if File_sf_substreams_sink_files_v1_files_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sf_substreams_sink_files_v1_files_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_substreams_sink_files_v1_files_proto_goTypes,
		DependencyIndexes: file_sf_substreams_sink_files_v1_files_proto_depIdxs,
		MessageInfos:      file_sf_substreams_sink_files_v1_files_proto_msgTypes,
	}.Build()
	File_sf_substreams_sink_files_v1_files_proto = out.File
	file_sf_substreams_sink_files_v1_files_proto_rawDesc = nil
	file_sf_substreams_sink_files_v1_files_proto_goTypes = nil
	file_sf_substreams_sink_files_v1_files_proto_depIdxs = nil
}
