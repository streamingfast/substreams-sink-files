// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: parquet/options.proto

package pbparquet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ColumnType int32

const (
	ColumnType_UNSPECIFIED_COLUMN_TYPE ColumnType = 0
	ColumnType_UINT256                 ColumnType = 1
	ColumnType_INT256                  ColumnType = 2
)

// Enum value maps for ColumnType.
var (
	ColumnType_name = map[int32]string{
		0: "UNSPECIFIED_COLUMN_TYPE",
		1: "UINT256",
		2: "INT256",
	}
	ColumnType_value = map[string]int32{
		"UNSPECIFIED_COLUMN_TYPE": 0,
		"UINT256":                 1,
		"INT256":                  2,
	}
)

func (x ColumnType) Enum() *ColumnType {
	p := new(ColumnType)
	*p = x
	return p
}

func (x ColumnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColumnType) Descriptor() protoreflect.EnumDescriptor {
	return file_parquet_options_proto_enumTypes[0].Descriptor()
}

func (ColumnType) Type() protoreflect.EnumType {
	return &file_parquet_options_proto_enumTypes[0]
}

func (x ColumnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ColumnType.Descriptor instead.
func (ColumnType) EnumDescriptor() ([]byte, []int) {
	return file_parquet_options_proto_rawDescGZIP(), []int{0}
}

type TimestampType int32

const (
	TimestampType_UNSPECIFIED_TIMESTAMP_TYPE TimestampType = 0
	TimestampType_TIMESTAMP_MILLIS           TimestampType = 1
	TimestampType_TIMESTAMP_MICROS           TimestampType = 2
	TimestampType_TIMESTAMP_NANOS            TimestampType = 3
)

// Enum value maps for TimestampType.
var (
	TimestampType_name = map[int32]string{
		0: "UNSPECIFIED_TIMESTAMP_TYPE",
		1: "TIMESTAMP_MILLIS",
		2: "TIMESTAMP_MICROS",
		3: "TIMESTAMP_NANOS",
	}
	TimestampType_value = map[string]int32{
		"UNSPECIFIED_TIMESTAMP_TYPE": 0,
		"TIMESTAMP_MILLIS":           1,
		"TIMESTAMP_MICROS":           2,
		"TIMESTAMP_NANOS":            3,
	}
)

func (x TimestampType) Enum() *TimestampType {
	p := new(TimestampType)
	*p = x
	return p
}

func (x TimestampType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimestampType) Descriptor() protoreflect.EnumDescriptor {
	return file_parquet_options_proto_enumTypes[1].Descriptor()
}

func (TimestampType) Type() protoreflect.EnumType {
	return &file_parquet_options_proto_enumTypes[1]
}

func (x TimestampType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimestampType.Descriptor instead.
func (TimestampType) EnumDescriptor() ([]byte, []int) {
	return file_parquet_options_proto_rawDescGZIP(), []int{1}
}

var file_parquet_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         14756842,
		Name:          "parquet.table_name",
		Tag:           "bytes,14756842,opt,name=table_name",
		Filename:      "parquet/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         548935,
		Name:          "parquet.ignored",
		Tag:           "varint,548935,opt,name=ignored",
		Filename:      "parquet/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*ColumnType)(nil),
		Field:         548936,
		Name:          "parquet.column_type",
		Tag:           "varint,548936,opt,name=column_type,enum=parquet.ColumnType",
		Filename:      "parquet/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*TimestampType)(nil),
		Field:         548937,
		Name:          "parquet.timestamp_type",
		Tag:           "varint,548937,opt,name=timestamp_type,enum=parquet.TimestampType",
		Filename:      "parquet/options.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// As long as table_name is not blank,
	// a schema is generated for top-level messages in each file.
	//
	// optional string table_name = 14756842;
	E_TableName = &file_parquet_options_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional bool ignored = 548935;
	E_Ignored = &file_parquet_options_proto_extTypes[1]
	// optional parquet.ColumnType column_type = 548936;
	E_ColumnType = &file_parquet_options_proto_extTypes[2]
	// optional parquet.TimestampType timestamp_type = 548937;
	E_TimestampType = &file_parquet_options_proto_extTypes[3]
)

var File_parquet_options_proto protoreflect.FileDescriptor

var file_parquet_options_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x61, 0x72, 0x71, 0x75, 0x65, 0x74, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x61, 0x72, 0x71, 0x75, 0x65, 0x74,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2a, 0x42, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f,
	0x43, 0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x49, 0x4e, 0x54, 0x32, 0x35, 0x36, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e,
	0x54, 0x32, 0x35, 0x36, 0x10, 0x02, 0x2a, 0x70, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x49, 0x4d, 0x45, 0x53,
	0x54, 0x41, 0x4d, 0x50, 0x5f, 0x4d, 0x49, 0x4c, 0x4c, 0x49, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a,
	0x10, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x5f, 0x4d, 0x49, 0x43, 0x52, 0x4f,
	0x53, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50,
	0x5f, 0x4e, 0x41, 0x4e, 0x4f, 0x53, 0x10, 0x03, 0x3a, 0x41, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xea, 0xd7, 0x84, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x39, 0x0a, 0x07, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc7, 0xc0, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x3a, 0x55, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc8, 0xc0, 0x21, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70,
	0x61, 0x72, 0x71, 0x75, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x5e, 0x0a,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc9,
	0xc0, 0x21, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x61, 0x72, 0x71, 0x75, 0x65, 0x74,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x42, 0x45, 0x5a,
	0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x73, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x2d, 0x73, 0x69, 0x6e, 0x6b, 0x2d, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f,
	0x70, 0x62, 0x2f, 0x70, 0x61, 0x72, 0x71, 0x75, 0x65, 0x74, 0x3b, 0x70, 0x62, 0x70, 0x61, 0x72,
	0x71, 0x75, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_parquet_options_proto_rawDescOnce sync.Once
	file_parquet_options_proto_rawDescData = file_parquet_options_proto_rawDesc
)

func file_parquet_options_proto_rawDescGZIP() []byte {
	file_parquet_options_proto_rawDescOnce.Do(func() {
		file_parquet_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_parquet_options_proto_rawDescData)
	})
	return file_parquet_options_proto_rawDescData
}

var file_parquet_options_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_parquet_options_proto_goTypes = []any{
	(ColumnType)(0),                     // 0: parquet.ColumnType
	(TimestampType)(0),                  // 1: parquet.TimestampType
	(*descriptorpb.MessageOptions)(nil), // 2: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 3: google.protobuf.FieldOptions
}
var file_parquet_options_proto_depIdxs = []int32{
	2, // 0: parquet.table_name:extendee -> google.protobuf.MessageOptions
	3, // 1: parquet.ignored:extendee -> google.protobuf.FieldOptions
	3, // 2: parquet.column_type:extendee -> google.protobuf.FieldOptions
	3, // 3: parquet.timestamp_type:extendee -> google.protobuf.FieldOptions
	0, // 4: parquet.column_type:type_name -> parquet.ColumnType
	1, // 5: parquet.timestamp_type:type_name -> parquet.TimestampType
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	4, // [4:6] is the sub-list for extension type_name
	0, // [0:4] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_parquet_options_proto_init() }
func file_parquet_options_proto_init() {
	if File_parquet_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parquet_options_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_parquet_options_proto_goTypes,
		DependencyIndexes: file_parquet_options_proto_depIdxs,
		EnumInfos:         file_parquet_options_proto_enumTypes,
		ExtensionInfos:    file_parquet_options_proto_extTypes,
	}.Build()
	File_parquet_options_proto = out.File
	file_parquet_options_proto_rawDesc = nil
	file_parquet_options_proto_goTypes = nil
	file_parquet_options_proto_depIdxs = nil
}
